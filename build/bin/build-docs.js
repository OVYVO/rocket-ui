var Components = require('../../components.json');
var fs = require('fs');
var render = require('json-templater/string');
var uppercamelcase = require('uppercamelcase');
var path = require('path');
var endOfLine = require('os').EOL;

var OUTPUT_PATH_ENHANCEAPP = path.join(__dirname, '../../docs/.vuepress/enhanceApp.js');
var OUTPUT_PATH_COMPONENTS = path.join(__dirname, '../../docs/.vuepress/components.js');
var IMPORT_TEMPLATE = 'import {{name}} from \'@root/packages/{{package}}/src/main.vue\';';
var INSTALL_COMPONENT_TEMPLATE = '  {{name}}';
var COMPONENTLINK_TEMPLATE = `module.exports.links = [
{{links}}
]`;
var MAIN_TEMPLATE = `/* Automatically generated by './build/bin/build-docs.js' */

{{include}}

const components = [
{{install}}
];

export default({
  Vue
})=>{
  components.forEach(item=>{
    Vue.component(item.name, item);
  })
}`;

delete Components.font;

var ComponentNames = Object.keys(Components);

var includeComponentTemplate = [];
var installTemplate = [];
var linkComponentTemplate = []

// å¾ªçŽ¯ç»„ä»¶docsæ³¨å†Œ
ComponentNames.forEach(name => {
  var componentName = uppercamelcase(name);

  includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name
  }));
  
  linkComponentTemplate.push(`  ['/components/${name}','${componentName} ${Components[name].name}']`)

  if (['Loading', 'MessageBox', 'Notification', 'Message', 'InfiniteScroll'].indexOf(componentName) === -1) {
    installTemplate.push(render(INSTALL_COMPONENT_TEMPLATE, {
      name: componentName
    }));
  }

});

var template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine),
});

var template_links = render(COMPONENTLINK_TEMPLATE,{
  links: linkComponentTemplate.join(',' + endOfLine)
})

fs.writeFileSync(OUTPUT_PATH_ENHANCEAPP, template);
fs.writeFileSync(OUTPUT_PATH_COMPONENTS, template_links);
console.log('ðŸš—ðŸš—ðŸš—[build docs] DONE:', OUTPUT_PATH_ENHANCEAPP);
console.log('ðŸš—ðŸš—ðŸš—[build docs] DONE:', OUTPUT_PATH_COMPONENTS);